# ===============================
# ðŸš§ Builder stage
# ===============================
FROM node:20-alpine AS builder
WORKDIR /app

# Copy package metadata trÆ°á»›c Ä‘á»ƒ tá»‘i Æ°u cache
COPY package*.json ./
RUN npm ci --silent

# Copy Prisma vÃ  source code
COPY prisma ./prisma
COPY tsconfig*.json nest-cli.json ./
COPY src ./src

# âœ… Nháº­n DATABASE_URL tá»« Railway (cáº§n cho `prisma generate`)
ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}

# Build (cháº¡y prisma generate + nest build)
RUN npm run build --silent

# ===============================
# ðŸš€ Runner stage
# ===============================
FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production

# Copy metadata
COPY package*.json ./

# Copy artifacts tá»« builder stage
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/prisma ./prisma

# Copy entrypoint script
COPY docker-entrypoint.sh /app/docker-entrypoint.sh
RUN chmod +x /app/docker-entrypoint.sh

# Expose port (Railway sáº½ tá»± inject PORT env var)
EXPOSE 3000

# Run migrations rá»“i khá»Ÿi Ä‘á»™ng app
ENTRYPOINT ["/app/docker-entrypoint.sh"]
